"""
Test generated by RoostGPT for test aman-4Dec using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function correctly calculates the age when today's date is later in the year than the birth date.
   - Given today's date is 2022-12-31
   - And the birth date is 2000-01-01
   - When I call the function with the birth date
   - Then it should return the age as 22 years, 11 months, and 30 days.

2. Scenario: Check if the function correctly calculates the age when the birth date is later in the year than today's date.
   - Given today's date is 2022-01-01
   - And the birth date is 2000-12-31
   - When I call the function with the birth date
   - Then it should return the age as 21 years, 0 months, and 1 day.

3. Scenario: Check if the function correctly calculates the age when the birth date and today's date are the same.
   - Given today's date is 2022-01-01
   - And the birth date is also 2022-01-01
   - When I call the function with the birth date
   - Then it should return the age as 0 years, 0 months, and 0 days.

4. Scenario: Check if the function correctly calculates the age when the birth date is a leap year and the birth date is 29th February.
   - Given today's date is 2023-03-01
   - And the birth date is 2000-02-29
   - When I call the function with the birth date
   - Then it should return the age as 23 years, 0 months, and 2 days.

5. Scenario: Check if the function correctly calculates the age when the birth year is a leap year and the birth date is 28th February.
   - Given today's date is 2023-02-28
   - And the birth date is 2000-02-28
   - When I call the function with the birth date
   - Then it should return the age as 23 years, 0 months, and 0 days.  

6. Scenario: Check if the function correctly calculates the age when the birth date is 31st of a month and the current month has less than 31 days.
   - Given today's date is 2022-02-28
   - And the birth date is 2000-01-31
   - When I call the function with the birth date
   - Then it should return the age as 22 years, 0 months, and 28 days. 

7. Scenario: Check if the function correctly calculates the age when the birth date is 1st of a month and the current date is the last day of the same month.
   - Given today's date is 2022-01-31
   - And the birth date is 2000-01-01
   - When I call the function with the birth date
   - Then it should return the age as 22 years, 0 months, and 30 days.
"""
import pytest
from datetime import date
import birthDateToCurrentAge

# Mocking today's date for consistent test results
def mock_today(today):
    return lambda: today

# Test scenario 1
def test_age_calculator_scenario_1():
    birthDateToCurrentAge.date.today = mock_today(date(2022, 12, 31))
    assert birthDateToCurrentAge.ageCalculator(2000, 1, 1) == (22, 11, 30)

# Test scenario 2
def test_age_calculator_scenario_2():
    birthDateToCurrentAge.date.today = mock_today(date(2022, 1, 1))
    assert birthDateToCurrentAge.ageCalculator(2000, 12, 31) == (21, 0, 1)

# Test scenario 3
def test_age_calculator_scenario_3():
    birthDateToCurrentAge.date.today = mock_today(date(2022, 1, 1))
    assert birthDateToCurrentAge.ageCalculator(2022, 1, 1) == (0, 0, 0)

# Test scenario 4
def test_age_calculator_scenario_4():
    birthDateToCurrentAge.date.today = mock_today(date(2023, 3, 1))
    assert birthDateToCurrentAge.ageCalculator(2000, 2, 29) == (23, 0, 2)

# Test scenario 5
def test_age_calculator_scenario_5():
    birthDateToCurrentAge.date.today = mock_today(date(2023, 2, 28))
    assert birthDateToCurrentAge.ageCalculator(2000, 2, 28) == (23, 0, 0)

# Test scenario 6
def test_age_calculator_scenario_6():
    birthDateToCurrentAge.date.today = mock_today(date(2022, 2, 28))
    assert birthDateToCurrentAge.ageCalculator(2000, 1, 31) == (22, 0, 28)

# Test scenario 7
def test_age_calculator_scenario_7():
    birthDateToCurrentAge.date.today = mock_today(date(2022, 1, 31))
    assert birthDateToCurrentAge.ageCalculator(2000, 1, 1) == (22, 0, 30)
