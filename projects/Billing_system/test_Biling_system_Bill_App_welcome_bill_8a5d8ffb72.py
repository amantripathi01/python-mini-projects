"""
Test generated by RoostGPT for test aman-4Dec using AI Type Open AI and AI Model gpt-4

1. Scenario: Check if the function is clearing the existing text in the text area.
    - Given: A text area with existing text.
    - When: The function welcome_bill is called.
    - Then: The existing text in the text area should be deleted.

2. Scenario: Check if the function is inserting the welcome message correctly.
    - Given: An empty text area.
    - When: The function welcome_bill is called.
    - Then: The text area should display the welcome message "Welcome Webcode Retail".

3. Scenario: Check if the function is inserting the bill number correctly.
    - Given: An empty text area and a bill number.
    - When: The function welcome_bill is called.
    - Then: The text area should display the bill number entered.

4. Scenario: Check if the function is inserting the customer name correctly.
    - Given: An empty text area and a customer name.
    - When: The function welcome_bill is called.
    - Then: The text area should display the customer name entered.

5. Scenario: Check if the function is inserting the customer phone number correctly.
    - Given: An empty text area and a customer phone number.
    - When: The function welcome_bill is called.
    - Then: The text area should display the customer phone number entered.

6. Scenario: Check if the function is inserting the product details template correctly.
    - Given: An empty text area.
    - When: The function welcome_bill is called.
    - Then: The text area should display the product details template "Products\t\tQTY\t\tPrice".

7. Scenario: Check if the function is working correctly when multiple calls are made.
    - Given: An empty text area.
    - When: The function welcome_bill is called multiple times.
    - Then: The text area should display the correct details for each call, without any residual data from previous calls. 

8. Scenario: Check if the function is handling null values correctly.
    - Given: An empty text area and null values for bill number, customer name, and phone number.
    - When: The function welcome_bill is called.
    - Then: The text area should display the welcome message and product details template, but no customer details.
"""
# Importing Required Libraries
import pytest
from tkinter import *
from biling_system import Bill_App

# Defining the Test Class
class TestBillApp:

    # Initializing Required Variables
    def setup_class(self):
        self.root = Tk()
        self.root.geometry("1350x700+0+0")
        self.bill_app = Bill_App(self.root)

    # Test Scenario 1: Check if the function is clearing the existing text in the text area.
    def test_welcome_bill_clear_text(self):
        self.bill_app.txtarea.insert(END, "Existing text")
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("1.0", "1.18") == "\tWelcome Webcode Retail"

    # Test Scenario 2: Check if the function is inserting the welcome message correctly.
    def test_welcome_bill_welcome_message(self):
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("1.0", "1.18") == "\tWelcome Webcode Retail"

    # Test Scenario 3: Check if the function is inserting the bill number correctly.
    def test_welcome_bill_bill_number(self):
        self.bill_app.bill_no.set("1234")
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("2.0", "2.20") == "\n Bill Number:1234"

    # Test Scenario 4: Check if the function is inserting the customer name correctly.
    def test_welcome_bill_customer_name(self):
        self.bill_app.c_name.set("John Doe")
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("3.0", "3.20") == "\nCustomer Name:John Doe"

    # Test Scenario 5: Check if the function is inserting the customer phone number correctly.
    def test_welcome_bill_customer_phone(self):
        self.bill_app.c_phone.set("9876543210")
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("4.0", "4.20") == "\nPhone Number9876543210"

    # Test Scenario 6: Check if the function is inserting the product details template correctly.
    def test_welcome_bill_product_details_template(self):
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("6.0", "6.20") == "\nProducts\t\tQTY\t\tPrice"

    # Test Scenario 7: Check if the function is working correctly when multiple calls are made.
    def test_welcome_bill_multiple_calls(self):
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("1.0", "1.18") == "\tWelcome Webcode Retail"
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("1.0", "1.18") == "\tWelcome Webcode Retail"

    # Test Scenario 8: Check if the function is handling null values correctly.
    def test_welcome_bill_null_values(self):
        self.bill_app.bill_no.set("")
        self.bill_app.c_name.set("")
        self.bill_app.c_phone.set("")
        self.bill_app.welcome_bill()
        assert self.bill_app.txtarea.get("1.0", "1.18") == "\tWelcome Webcode Retail"
        assert self.bill_app.txtarea.get("2.0", "2.20") == "\n Bill Number:"
        assert self.bill_app.txtarea.get("3.0", "3.20") == "\nCustomer Name:"
        assert self.bill_app.txtarea.get("4.0", "4.20") == "\nPhone Number"

