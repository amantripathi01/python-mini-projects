"""
Test generated by RoostGPT for test aman-4Dec using AI Type Open AI and AI Model gpt-4

1. Scenario: Verify that the function works correctly with a non-empty array.
   - Given an array with valid elements
   - When the function print_out_ascii is called
   - Then it should print the coded image with symbols without errors

2. Scenario: Verify that the function handles an empty array correctly.
   - Given an empty array 
   - When the function print_out_ascii is called
   - Then it should not print anything and complete without errors

3. Scenario: Verify that the function handles arrays with a single element correctly.
   - Given an array with a single element
   - When the function print_out_ascii is called
   - Then it should print the corresponding symbol without errors

4. Scenario: Verify that the function handles arrays with multiple similar elements correctly.
   - Given an array with multiple similar elements
   - When the function print_out_ascii is called
   - Then it should print the same symbol multiple times without errors

5. Scenario: Verify that the function handles arrays with multiple different elements correctly.
   - Given an array with multiple different elements
   - When the function print_out_ascii is called
   - Then it should print different symbols in the correct order without errors

6. Scenario: Verify that the function handles nested arrays correctly.
   - Given a nested array with valid elements
   - When the function print_out_ascii is called
   - Then it should print the corresponding symbols for each sub-array without errors

7. Scenario: Verify that the function handles arrays with elements exceeding the length of the symbols_list correctly.
   - Given an array with elements whose value exceeds the length of the symbols_list
   - When the function print_out_ascii is called
   - Then it should print the corresponding symbols (based on the modulus operation) without errors

8. Scenario: Verify that the function handles arrays with negative elements correctly.
   - Given an array with negative elements
   - When the function print_out_ascii is called
   - Then it should print the corresponding symbols (based on the modulus operation) without errors

"""
import pytest
import make_art

def test_print_out_ascii_non_empty_array(capsys):
    array = [[1, 2, 3], [4, 5, 6]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == '#-#*#+#o#\n'

def test_print_out_ascii_empty_array(capsys):
    array = []
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == ''

def test_print_out_ascii_single_element_array(capsys):
    array = [[1]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == '-\n'

def test_print_out_ascii_multiple_similar_elements_array(capsys):
    array = [[1, 1, 1, 1]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == '----\n'

def test_print_out_ascii_multiple_different_elements_array(capsys):
    array = [[1, 2, 3, 4, 5, 0]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == '-*#+o#\n'

def test_print_out_ascii_nested_array(capsys):
    array = [[1, 2], [3, 4]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == '-*\n#+\n'

def test_print_out_ascii_exceeding_symbols_list_array(capsys):
    array = [[6, 7, 8, 9, 10]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == '#-#*#+\n'

def test_print_out_ascii_negative_elements_array(capsys):
    array = [[-1, -2, -3, -4, -5]]
    make_art.print_out_ascii(array)
    captured = capsys.readouterr()
    assert captured.out == 'o+#-#*\n'
